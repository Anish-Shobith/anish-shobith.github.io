---
import { Icon } from 'astro-icon';
import { Image } from 'astro:assets';
import me from "~/assets/images/me.webp";
import { SocialLinks } from '~/ts/data';

interface Resume {
  text: string;
  href: string;
  icon?: string;
}

export interface Props {
  title?: string;
  subtitle?: string;
  page?: string | Resume;
  image?: string | any;
}

const {
  page = await Astro.slots.render('page'),
  image = await Astro.slots.render('image'),
} = Astro.props;
---
<div class="w-full py-16 flex flex-col items-center space-y-8 shadow-inner">
    <div class="flex flex-col items-center dark:bg-[#e8dede] bg-zinc-700 p-2 mb-8 rounded-full">
      {image && (
        <div class="relative m-auto max-w-5xl">
          {typeof image === "string" ? (
            <Fragment set:html={image} />
          ) : (
            <Image
              src={me}
              alt="Image of Anish"
              class="w-128 h-128 sm:w-128 sm:h-128 rounded-full"
              width={[400, 768, 1024, 2040]}
              sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
              loading="eager"
              width={192}
              height={192}
            />
          )}
        </div>
      )}
    </div>
    <h1 class="text-5xl font-bold text-center inactive">
        <span class="text-accent dark:text-purple-500 highlight">Anish</span> Shobith P S
    </h1>
    <p class="text-2xl text-center font-semibold mx-8 inactive">  
        Computer Science Student. Software Developer
    </p>

    <div class="flex flex-row sm:flex-row justify-center items-center sm:items-center gap-10">
      {
        SocialLinks && (
          SocialLinks.map(social => (
            <a href={social.url} aria-label={social.name} target="_blank" rel="noopener">
              <Icon name={`socials/${social.name}`} class="h-8" />
            </a>
          ))
        )
      }
    </div>
    <div class="flex flex-col sm:flex-row">
      {
        page && (
        <div class="flex w-full sm:w-auto">
          {typeof page === "string" ? (
            <Fragment set:html={page} />
          ) : (
            <a
              class="btn btn-primary sm:mb-0 w-full"
              href={page?.href}
            >
              {page?.icon && (
                <>
                  <Icon name={page.icon} class="w-5 h-5 mr-1 -ml-1.5" />{" "}
                </>
              )}
              {page?.text}
            </a>
          )}
        </div>
      )
    }
    </div>
</div>
